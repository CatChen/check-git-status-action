name: Test Pull Request

on:
  pull_request:
    paths: ["[0-9a-fA-F]+"]
  workflow_dispatch:

jobs:
  test_dirty_push_in_pull_request:
    if: ${{ startsWith(github.head_ref, 'workflows/tests/') }}
    name: Test Dirty Push in Pull Request
    outputs:
      touched-filename: ${{ steps.make-dirty.outputs.touched-filename }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Make dirty
        id: make-dirty
        run: |
          echo "::set-output name=touched-filename::`git rev-parse --verify HEAD`"
          touch `git rev-parse --verify HEAD`

      - uses: ./
        id: test-action
        with:
          fail-if-not-clean: false
          push-if-not-clean: true
          github-token: ${{ secrets.REPO_TOKEN }}

      - name: Verify outputs
        env:
          TEST_ACTION_OUTPUT: ${{ steps.test-action.outputs.status }}
        run: |
          if [[ $TEST_ACTION_OUTPUT != "dirty" ]]
          then
            exit 1;
          fi

  verify_dirty_push_in_pull_request:
    if: ${{ startsWith(github.head_ref, 'workflows/tests/') }}
    name: Verify Dirty Push in Pull Request
    needs: test_dirty_push_in_pull_request
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Git fetch
        env:
          TEST_BRANCH_NAME: ${{ github.head_ref }}
        run: |
          git fetch --unshallow origin
          git checkout $TEST_BRANCH_NAME

      - name: Verify outputs
        env:
          TOUCHED_FILENAME: ${{ needs.test_dirty_push_in_pull_request.outputs.touched-filename }}
        run: |
          if [[ ! -f "$TOUCHED_FILENAME" ]]
          then
            exit 1
          fi

  revert_push_in_pull_request:
    if: ${{ startsWith(github.head_ref, 'workflows/tests/') }}
    name: Revert Dirty Push in Pull Request
    needs: verify_dirty_push_in_pull_request
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Git fetch
        env:
          TEST_BRANCH_NAME: ${{ github.head_ref }}
        run: |
          git fetch --unshallow origin
          git checkout $TEST_BRANCH_NAME

      - name: Git reset
        env:
        run: |
          git reset HEAD^ --hard

      - name: Git push
        env:
        run: |
          git push
